AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Example template for an HTTP API that creates, updates, and deletes items in DynamoDB
  
Globals:
  Function:
    Timeout: 10

Resources:
  DDBHandlerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: python3.9
      InlineCode: |
        import json
        import boto3

        dynamo = boto3.resource("dynamodb")

        table = dynamo.Table('http-crud-tutorial-items')

        def handler(event, context):
          status_code = 200
          headers = {
              "Content-Type": "application/json"
          }
          if event['routeKey'] == "GET /items":
            response = table.scan()
            body = response["Items"]
          elif event["routeKey"] == "PUT /items":
            table.put_item(
            Item={"id": json.loads(event["body"])["id"],
                  "name": json.loads(event["body"])["name"],
                  "price": json.loads(event["body"])["price"]}
            )
            body = "item {} added in the table".format(json.loads(event["body"])["id"])
          elif event["routeKey"] == "DELETE /items/{id}":
            table.delete_item(
            Key={"id": event["pathParameters"]["id"]}
            )
            body = "Deleted item {} from the table".format(event['pathParameters']['id'])
          elif event["routeKey"] == "GET /items/{id}":
            responseDB = table.get_item(
                Key={"id": event["pathParameters"]["id"]}
            )
            if "Item" in responseDB:
              body = responseDB["Item"] 
            else:
              body = "Requested item does not exist in the table"

          return {"status_code" : status_code, "body" : body, "headers" : headers}

      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ItemsTable
      Events:
        GetAllItems:
          Type: HttpApi
          Properties:
            Path: /items
            Method: GET
        GetAnItem:
          Type: HttpApi
          Properties:
            Path: /items/{id}
            Method: GET
        DeleteAnItem:
          Type: HttpApi
          Properties:
            Path: /items/{id}
            Method: DELETE
        CreateOrUpdateItem:
          Type: HttpApi
          Properties:
            Path: /items
            Method: PUT

  ItemsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName: http-crud-tutorial-items

Outputs:
  ApiEndpoint:
    Description: "The invoke URL for our HTTP API"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/items"
  Function:
    Description: "DynamoDB handler function ARN"
    Value: !GetAtt DDBHandlerFunction.Arn
